{"title":"SQLMAP命令大全","date":"2018-12-11T11:10:10.000Z","thumbnail":"https://i.loli.net/2018/12/24/5c20d190199db.jpg","link":"post/SQLMAP-shell","comments":true,"tags":["SQLMAP命令"],"categories":["Kali-SQLMAP"],"updated":"2020-01-06T13:57:09.284Z","content":"<h4 id=\"一、sqlmap简介\"><font color=\"#00BFFF\" face=\"楷体\">一、sqlmap简介</font><a href=\"post/SQLMAP-shell#一、sqlmap简介\"></a></h4><p>&emsp;sqlmap支持MySQL, Oracle,PostgreSQL, Microsoft SQL Server, Microsoft Access, IBM DB2, SQLite, Firebird,Sybase和SAP MaxDB等数据库的各种安全漏洞检测。</p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#F0FFF0\"><font face=\"楷体\">sqlmap支持五种不同的注入模式：\n 🌸**基于布尔的盲注**，即可以根据返回页面判断条件真假的注入；\n 🌸**基于时间的盲注**，即不能根据页面返回内容判断任何信息，用条件语句查看时间延迟语      句是否执行（即页面返回时间是否增加）来判断；\n 🌸**基于报错注入**，即页面会返回错误信息，或者把注入的语句的结果直接返回在页面中；\n 🌸**联合查询注入**，可以使用union的情况下的注入；\n 🌸**堆查询注入**，可以同时执行多条语句的执行时的注入。</font></td></tr></table></div></div>\n\n\n<p>&ensp;</p>\n<h4 id=\"二、SQL使用参数详解\"><font color=\"#00BFFF\" face=\"楷体\">二、SQL使用参数详解</font><a href=\"post/SQLMAP-shell#二、SQL使用参数详解\"></a></h4><p><font face=\"楷体\">每条指令使用方法参见：<a href=\"http://blog.51cto.com/wt7315/1841241\" target=\"_blank\" rel=\"noopener\">《sqlmap注入总结》</a>.</font></p>\n<h5 id=\"2-1-选项Options\"><font face=\"楷体\" color=\"#FF6347\">2.1 选项Options</font><a href=\"post/SQLMAP-shell#2-1-选项Options\"></a></h5><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#F0FFF0\"><font face=\"楷体\">-h,–help  显示基本帮助信息并退出\n -hh    显示高级帮助信息并退出\n\\--version  显示程序版本信息并退出\n-vVERBOSE信息级别: 0-6 （缺省1），其值具体含义：“0”只显示python错误以及严重的信息；1同时显示基本信息和警告信息（默认）；“2”同时显示debug信息；“3”同时显示注入的payload；“4”同时显示HTTP请求；“5”同时显示HTTP响应头；“6”同时显示HTTP响应页面；如果想看到sqlmap发送的测试payload最好的等级就是3。</font></td></tr></table></div></div>\n\n<p>&nbsp;</p>\n<h5 id=\"2-2-目标Target\"><font face=\"楷体\" color=\"#FF6347\">2.2 目标Target</font><a href=\"post/SQLMAP-shell#2-2-目标Target\"></a></h5><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#F0FFF0\"><font face=\"楷体\">在这些选项中必须提供至少有一个确定目标\n -d DIRECT    直接连接数据库的连接字符串\n-u URL, –url=URL   目标URL (e.g.”http://www.site.com/vuln.php?id=1“)，使用-u或者–url\n-l LOGFILE     从Burp或者WebScarab代理日志文件中分析目标\n-x SITEMAPURL  从远程网站地图（sitemap.xml）文件来解析目标\n-m BULKFILE      将目标地址保存在文件中，一行为一个URL地址进行批量检测。\n-r REQUESTFILE   从文件加载HTTP请求，sqlmap可以从一个文本文件中获取HTTP请求，这样就可以跳过设置一些其他参数（比如cookie，POST数据，等等），请求是HTTPS的时需要配合这个–force-ssl参数来使用，或者可以在Host头后门加上:443\n-g GOOGLEDORK     从谷歌中加载结果目标URL（只获取前100个结果，需要挂代理）\n-c CONFIGFILE       从配置ini文件中加载选项</font></td></tr></table></div></div>\n\n<p>&nbsp;</p>\n<h5 id=\"2-3-请求Request\"><font face=\"楷体\" color=\"#FF6347\">2.3 请求Request</font><a href=\"post/SQLMAP-shell#2-3-请求Request\"></a></h5><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#F0FFF0\"><font face=\"楷体\">这些选项可以用来指定如何连接到目标URL\n\\--method=METHOD  强制使用给定的HTTP方法（例如put）\n    \\--data=DATA   通过POST发送数据参数，sqlmap会像检测GET参数一样检测POST的参数。\\--data=\"id=1\" -f \\--banner \\--dbs \\--users\n   \\--param-del=PARA..  当GET或POST的数据需要用其他字符分割测试参数的时候需要用到此参数。\n   \\--cookie=COOKIE     HTTP Cookieheader 值\n   \\--cookie-del=COO..  用来分隔cookie的字符串值\n   \\--load-cookies=L..  Filecontaining cookies in Netscape/wget format\n   \\--drop-set-cookie   IgnoreSet-Cookie header from response\n   \\--user-agent=AGENT  默认情况下sqlmap的HTTP请求头中User-Agent值是：sqlmap/1.0-dev-xxxxxxx(http://sqlmap.org)可以使用--user-agent参数来修改，同时也可以使用--random-agent参数来随机的从./txt/user-agents.txt中获取。当--level参数设定为3或者3以上的时候，会尝试对User-Angent进行注入\n   \\--random-agent     使用random-agent作为HTTP User-Agent头值\n   \\--host=HOST         HTTP Hostheader value\n   \\--referer=REFERER   sqlmap可以在请求中伪造HTTP中的referer，当–level参数设定为3或者3以上的时候会尝试对referer注入\n   -H HEADER, –hea..  额外的http头(e.g.”X-Forwarded-For: 127.0.0.1″)\n   \\--headers=HEADERS  可以通过–headers参数来增加额外的http头(e.g.”Accept-Language: fr\\nETag: 123″)\n   \\--auth-type=AUTH.. HTTP的认证类型 (Basic, Digest, NTLM or PKI)\n   \\--auth-cred=AUTH..  HTTP 认证凭证(name:password)\n   \\--auth-file=AUTH..  HTTP 认证PEM证书/私钥文件；当Web服务器需要客户端证书进行身份验证时，需要提供两个文件:key_file，cert_file,key_file是格式为PEM文件，包含着你的私钥，cert_file是格式为PEM的连接文件。\n   \\--ignore-401        Ignore HTTPError 401 (Unauthorized)忽略HTTP 401错误（未授权的）\n   \\--ignore-proxy      忽略系统的默认代理设置\n   \\--ignore-redirects忽略重定向的尝试\n   \\--ignore-timeouts   忽略连接超时\n   \\--proxy=PROXY       使用代理服务器连接到目标URL\n   \\--proxy-cred=PRO..  代理认证凭证(name:password)\n   \\--proxy-file=PRO..  从文件加载代理列表\n   \\--tor               使用Tor匿名网络\n   \\--tor-port=TORPORT  设置Tor代理端口\n   \\--tor-type=TORTYPE  设置Tor代理类型 (HTTP,SOCKS4 or SOCKS5 (缺省))\n   \\--check-tor       检查Tor的是否正确使用\n   \\--delay=DELAY   可以设定两个HTTP(S)请求间的延迟，设定为0.5的时候是半秒，默认是没有延迟的。\n   \\--timeout=TIMEOUT   可以设定一个HTTP(S)请求超过多久判定为超时，10表示10秒，默认是30秒。\n   \\--retries=RETRIES   当HTTP(S)超时时，可以设定重新尝试连接次数，默认是3次。\n   \\--randomize=RPARAM可以设定某一个参数值在每一次请求中随机的变化，长度和类型会与提供的初始值一样\n   \\--safe-url=SAFEURL  提供一个安全不错误的连接，每隔一段时间都会去访问一下\n   \\--safe-post=SAFE..  提供一个安全不错误的连接，每次测试请求之后都会再访问一遍安全连接。\n   \\--safe-req=SAFER..  从文件中加载安全HTTP请求\n   \\--safe-freq=SAFE..  测试一个给定安全网址的两个访问请求\n   \\--skip-urlencode    跳过URL的有效载荷数据编码\n   \\--csrf-token=CSR..  Parameter usedto hold anti-CSRF token参数用来保存反CSRF令牌\n   \\--csrf-url=CSRFURL  URL地址访问提取anti-CSRF令牌\n   \\--force-ssl         强制使用SSL/HTTPS\n   \\--hpp               使用HTTP参数污染的方法\n   \\--eval=EVALCODE     在有些时候，需要根据某个参数的变化，而修改另个一参数，才能形成正常的请求，这时可以用–eval参数在每次请求时根据所写python代码做完修改后请求。(e.g “import hashlib;id2=hashlib.md5(id).hexdigest()”)\n sqlmap.py -u”http://www.target.com/vuln.php?id=1&hash=c4ca4238a0b923820dcc509a6f75849b“--eval=”import hashlib;hash=hashlib.md5(id).hexdigest()”</font></td></tr></table></div></div>\n\n<p>&nbsp;</p>\n<h5 id=\"2-4-优化Optimization\"><font face=\"楷体\" color=\"#FF6347\">2.4 优化Optimization</font><a href=\"post/SQLMAP-shell#2-4-优化Optimization\"></a></h5><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#F0FFF0\"><font face=\"楷体\">这些选项可用于优化sqlmap性能\n-o               打开所有的优化开关\n\\--predict-output    预测普通查询输出\n\\--keep-alive        使用持久HTTP（S）连接\n\\--null-connection   获取页面长度\n\\--threads=THREADS   当前http(s)最大请求数 (默认 1)</font></td></tr></table></div></div>\n\n<p>&nbsp;</p>\n<h5 id=\"2-5-注入Injection\"><font face=\"楷体\" color=\"#FF6347\">2.5 注入Injection</font><a href=\"post/SQLMAP-shell#2-5-注入Injection\"></a></h5><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#F0FFF0\"><font face=\"楷体\">这些选项可用于指定要测试的参数、提供自定义注入有效载荷和可选的篡改脚本。\n   -p TESTPARAMETER    可测试的参数\n   \\--skip=SKIP         跳过对给定参数的测试\n   \\--skip-static       跳过测试不显示为动态的参数\n   \\--param-exclude=..  使用正则表达式排除参数进行测试（e.g. “ses”）\n   \\--dbms=DBMS         强制后端的DBMS为此值\n   \\--dbms-cred=DBMS..  DBMS认证凭证(user:password)\n   \\--os=OS            强制后端的DBMS操作系统为这个值\n   \\--invalid-bignum    使用大数字使值无效\n   \\--invalid-logical   使用逻辑操作使值无效\n   \\--invalid-string    使用随机字符串使值无效\n   \\--no-cast          关闭有效载荷铸造机制\n   \\--no-escape         关闭字符串逃逸机制\n   \\--prefix=PREFIX     注入payload字符串前缀\n   \\--suffix=SUFFIX     注入payload字符串后缀\n   \\--tamper=TAMPER   使用给定的脚本篡改注入数据</font></td></tr></table></div></div>\n\n<p>&nbsp;</p>\n<h5 id=\"2-6-检测Detection\"><font face=\"楷体\" color=\"#FF6347\">2.6 检测Detection</font><a href=\"post/SQLMAP-shell#2-6-检测Detection\"></a></h5><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#F0FFF0\"><font face=\"楷体\">这些选项可以用来指定在SQL盲注时如何解析和比较HTTP响应页面的内容\n   \\--level=LEVEL     执行测试的等级（1-5，默认为1）\n   \\--risk=RISK       执行测试的风险（0-3，默认为1）\n   \\--string=STRING    查询时有效时在页面匹配字符串\n   \\--not-string=NOT..  当查询求值为无效时匹配的字符串\n   \\--regexp=REGEXP     查询时有效时在页面匹配正则表达式\n   \\--code=CODE       当查询求值为True时匹配的HTTP代码\n   \\--text-only        仅基于在文本内容比较网页\n   \\--titles           仅根据他们的标题进行比较</font></td></tr></table></div></div>\n\n<p>&nbsp;</p>\n<h5 id=\"2-7-技巧Techniques\"><font face=\"楷体\" color=\"#FF6347\">2.7 技巧Techniques</font><a href=\"post/SQLMAP-shell#2-7-技巧Techniques\"></a></h5><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#F0FFF0\"><font face=\"楷体\">这些选项可用于调整具体的SQL注入测试\n   \\--technique=TECH    SQL注入技术测试（默认BEUST）\n   \\--time-sec=TIMESEC  DBMS响应的延迟时间（默认为5秒）\n   \\--union-cols=UCOLS  定列范围用于测试UNION查询注入\n   \\--union-char=UCHAR  暴力猜测列的字符数\n   \\--union-from=UFROM  SQL注入UNION查询使用的格式\n   \\--dns-domain=DNS..  DNS泄露攻击使用的域名\n   \\--second-order=S..  URL搜索产生的结果页面</font></td></tr></table></div></div>\n\n<p>&nbsp;</p>\n<h5 id=\"2-8-指纹Fingerprint\"><font face=\"楷体\" color=\"#FF6347\">2.8 指纹Fingerprint</font><a href=\"post/SQLMAP-shell#2-8-指纹Fingerprint\"></a></h5><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#F0FFF0\"><font face=\"楷体\">-f, \\--fingerprint   执行广泛的DBMS版本指纹检查</font></td></tr></table></div></div>\n\n<p>&nbsp;</p>\n<h5 id=\"2-9-枚举Enumeration\"><font face=\"楷体\" color=\"#FF6347\">2.9 枚举Enumeration</font><a href=\"post/SQLMAP-shell#2-9-枚举Enumeration\"></a></h5><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#F0FFF0\"><font face=\"楷体\">这些选项可以用来列举后端数据库管理系统的信息、表中的结构和数据。此外，您还可以运行自定义的SQL语句。\n   -a, \\--all           获取所有信息\n   -b, \\--banner        获取数据库管理系统的标识\n   \\--current-user      获取数据库管理系统当前用户\n   \\--current-db        获取数据库管理系统当前数据库\n   \\--hostname         获取数据库服务器的主机名称\n   \\--is-dba            检测DBMS当前用户是否DBA\n   \\--users             枚举数据库管理系统用户\n   \\--passwords         枚举数据库管理系统用户密码哈希\n   \\--privileges        枚举数据库管理系统用户的权限\n   \\--roles            枚举数据库管理系统用户的角色\n   \\--dbs             枚举数据库管理系统数据库\n   \\--tables            枚举的DBMS数据库中的表\n   \\--columns          枚举DBMS数据库表列\n   \\--schema            枚举数据库架构\n   \\--count             检索表的项目数，有时候用户只想获取表中的数据个数而不是具体的内容，那么就可以使用这个参数：sqlmap.py -u url --count -D testdb\n   \\--dump            转储数据库表项\n   \\--dump-all          转储数据库所有表项\n   \\--search           搜索列（S），表（S）和/或数据库名称（S）\n   \\--comments          获取DBMS注释\n   -D DB               要进行枚举的指定数据库名\n   -T TBL              DBMS数据库表枚举\n   -C COL             DBMS数据库表列枚举\n   -X EXCLUDECOL     DBMS数据库表不进行枚举\n   -U USER           用来进行枚举的数据库用户\n   \\--exclude-sysdbs    枚举表时排除系统数据库\n   \\--pivot-column=P..  Pivot columnname\n   \\--where=DUMPWHERE   Use WHEREcondition while table dumping\n   \\--start=LIMITSTART  获取第一个查询输出数据位置\n   \\--stop=LIMITSTOP   获取最后查询的输出数据\n   \\--first=FIRSTCHAR   第一个查询输出字的字符获取\n   \\--last=LASTCHAR    最后查询的输出字字符获取\n   \\--sql-query=QUERY   要执行的SQL语句\n   \\--sql-shell         提示交互式SQL的shell\n   \\--sql-file=SQLFILE  要执行的SQL文件</font></td></tr></table></div></div>\n\n<p>&nbsp;</p>\n<h5 id=\"2-10-暴力Brute-force\"><font face=\"楷体\" color=\"#FF6347\">2.10 暴力Brute force</font><a href=\"post/SQLMAP-shell#2-10-暴力Brute-force\"></a></h5><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#F0FFF0\"><font face=\"楷体\">这些选项可以被用来运行暴力检查\n   \\--common-tables     检查存在共同表\n   \\--common-columns    检查存在共同列</font></td></tr></table></div></div>\n\n<p>&nbsp;</p>\n<h5 id=\"2-11-用户自定义函数注入User-defined-function-injection\"><font face=\"楷体\" color=\"#FF6347\">2.11 用户自定义函数注入User-defined function injection</font><a href=\"post/SQLMAP-shell#2-11-用户自定义函数注入User-defined-function-injection\"></a></h5><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#F0FFF0\"><font face=\"楷体\">这些选项可以用来创建用户自定义函数\n   \\--udf-inject    注入用户自定义函数\n   \\--shared-lib=SHLIB  共享库的本地路径</font></td></tr></table></div></div>\n\n<p>&nbsp;</p>\n<h5 id=\"2-12-访问文件系统File-system-access\"><font face=\"楷体\" color=\"#FF6347\">2.12 访问文件系统File system access</font><a href=\"post/SQLMAP-shell#2-12-访问文件系统File-system-access\"></a></h5><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#F0FFF0\"><font face=\"楷体\">这些选项可以被用来访问后端数据库管理系统的底层文件系统\n   \\--file-read=RFILE   从后端的数据库管理系统文件系统读取文件，SQL Server2005中读取二进制文件example.exe:\nsqlmap.py -u”http://192.168.136.129/sqlmap/mssql/iis/get_str2.asp?name=luther“\\--file-read “C:/example.exe” -v 1\n   \\--file-write=WFILE  编辑后端的数据库管理系统文件系统上的本地文件\n   \\--file-dest=DFILE   后端的数据库管理系统写入文件的绝对路径\n在kali中将/software/nc.exe文件上传到C:/WINDOWS/Temp下：\npython sqlmap.py -u”http://192.168.136.129/sqlmap/mysql/get_int.aspx?id=1” \\--file-write”/software/nc.exe” \\--file-dest “C:/WINDOWS/Temp/nc.exe” -v1</font></td></tr></table></div></div>\n\n<p>&nbsp;</p>\n<h5 id=\"2-13-操作系统访问Operating-system-access\"><font face=\"楷体\" color=\"#FF6347\">2.13 操作系统访问Operating system access</font><a href=\"post/SQLMAP-shell#2-13-操作系统访问Operating-system-access\"></a></h5><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#F0FFF0\"><font face=\"楷体\">\n这些选项可以用于访问后端数据库管理系统的底层操作系统\n   \\--os-cmd=OSCMD   执行操作系统命令（OSCMD）\n   \\--os-shell          交互式的操作系统的shell\n   \\--os-pwn          获取一个OOB shell，meterpreter或VNC\n   \\--os-smbrelay       一键获取一个OOBshell，meterpreter或VNC\n   \\--os-bof           存储过程缓冲区溢出利用\n   \\--priv-esc          数据库进程用户权限提升\n   \\--msf-path=MSFPATH  MetasploitFramework本地的安装路径\n   \\--tmp-path=TMPPATH  远程临时文件目录的绝对路径\nlinux查看当前用户命令：\nsqlmap.py -u”http://192.168.136.131/sqlmap/pgsql/get_int.php?id=1” \\--os-cmd id -v1</font></td></tr></table></div></div>\n\n<p>&nbsp;</p>\n<h5 id=\"2-14-Windows注册表访问Windows-registry-access\"><font face=\"楷体\" color=\"#FF6347\">2.14 Windows注册表访问Windows registry access</font><a href=\"post/SQLMAP-shell#2-14-Windows注册表访问Windows-registry-access\"></a></h5><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#F0FFF0\"><font face=\"楷体\">这些选项可以被用来访问后端数据库管理系统Windows注册表\n   \\--reg-read          读一个Windows注册表项值\n   \\--reg-add           写一个Windows注册表项值数据\n   \\--reg-del           删除Windows注册表键值\n   \\--reg-key=REGKEY    Windows注册表键\n   \\--reg-value=REGVAL  Windows注册表项值\n   \\--reg-data=REGDATA  Windows注册表键值数据\n   \\--reg-type=REGTYPE  Windows注册表项值类型</font></td></tr></table></div></div>\n\n<p>&nbsp;</p>\n<h5 id=\"2-15-一般选项General\"><font face=\"楷体\" color=\"#FF6347\">2.15 一般选项General</font><a href=\"post/SQLMAP-shell#2-15-一般选项General\"></a></h5><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#F0FFF0\"><font face=\"楷体\">这些选项可以用来设置一些一般的工作参数\n   -s SESSIONFILE     保存和恢复检索会话文件的所有数据\n   -t TRAFFICFILE      记录所有HTTP流量到一个文本文件中\n   \\--batch            从不询问用户输入，使用所有默认配置。\n   \\--binary-fields=..  结果字段具有二进制值(e.g.”digest”)\n   \\--charset=CHARSET   强制字符编码\n   \\--crawl=CRAWLDEPTH  从目标URL爬行网站\n   \\--crawl-exclude=..  正则表达式从爬行页中排除\n   \\--csv-del=CSVDEL    限定使用CSV输出 (default”,”)\n   \\--dump-format=DU..  转储数据格式(CSV(default), HTML or SQLITE)\n   \\--eta              显示每个输出的预计到达时间\n   \\--flush-session     刷新当前目标的会话文件\n   \\--forms           解析和测试目标URL表单\n   \\--fresh-queries     忽略在会话文件中存储的查询结果\n   \\--hex             使用DBMS Hex函数数据检索\n   \\--output-dir=OUT..  自定义输出目录路径\n   \\--parse-errors      解析和显示响应数据库错误信息\n   \\--save=SAVECONFIG   保存选项到INI配置文件\n   \\--scope=SCOPE    从提供的代理日志中使用正则表达式过滤目标\n   \\--test-filter=TE..  选择测试的有效载荷和/或标题(e.g. ROW)\n   \\--test-skip=TEST..  跳过试验载荷和/或标题(e.g.BENCHMARK)\n   \\--update            更新sqlmap</font></td></tr></table></div></div>\n\n<p>&nbsp;</p>\n<h5 id=\"2-16-杂项Miscellaneous\"><font face=\"楷体\" color=\"#FF6347\">2.16 杂项Miscellaneous</font><a href=\"post/SQLMAP-shell#2-16-杂项Miscellaneous\"></a></h5><div class=\"article-bounded\"><div class=\"article-table\"><table><tr><td bgcolor=\"#F0FFF0\"><font face=\"楷体\">\n   -z MNEMONICS        使用短记忆法 (e.g.”flu,bat,ban,tec=EU”)\n   \\--alert=ALERT       发现SQL注入时，运行主机操作系统命令\n   \\--answers=ANSWERS   当希望sqlmap提出输入时，自动输入自己想要的答案(e.g. “quit=N,follow=N”)，例如：sqlmap.py -u”http://192.168.22.128/get_int.php?id=1“–technique=E\\--answers=”extending=N” \\--batch\n   \\--beep    发现sql注入时，发出蜂鸣声。\n   \\--cleanup     清除sqlmap注入时在DBMS中产生的udf与表。\n   \\--dependencies      Check formissing (non-core) sqlmap dependencies\n   \\--disable-coloring  默认彩色输出，禁掉彩色输出。\n   \\--gpage=GOOGLEPAGE 使用前100个URL地址作为注入测试，结合此选项，可以指定页面的URL测试\n   \\--identify-waf      进行WAF/IPS/IDS保护测试，目前大约支持30种产品的识别\n   \\--mobile     有时服务端只接收移动端的访问，此时可以设定一个手机的User-Agent来模仿手机登陆。\n   \\--offline           Work inoffline mode (only use session data)\n   \\--purge-output     从输出目录安全删除所有内容，有时需要删除结果文件，而不被恢复，可以使用此参数，原有文件将会被随机的一些文件覆盖。\n   \\--skip-waf           跳过WAF／IPS / IDS启发式检测保护\n   \\--smart            进行积极的启发式测试，快速判断为注入的报错点进行注入\n   \\--sqlmap-shell      互动提示一个sqlmapshell\n   \\--tmp-dir=TMPDIR    用于存储临时文件的本地目录\n   \\--web-root=WEBROOT  Web服务器的文档根目录(e.g.”/var/www”)\n   \\--wizard   新手用户简单的向导使用，可以一步一步教你如何输入针对目标注入</font></td></tr></table></div></div>\n\n\n","prev":{"title":"Java的输入输出","link":"post/Java-IO-1"},"next":{"title":"信息安全数学基础复习笔记","link":"post/Mathematical-basis"},"plink":"https://Directoree.github.io/post/SQLMAP-shell/","reward":true,"copyright":{"author":"Directoree","link":"<a href=\"https://Directoree.github.io/post/SQLMAP-shell/\" title=\"SQLMAP命令大全\">https://Directoree.github.io/post/SQLMAP-shell/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}