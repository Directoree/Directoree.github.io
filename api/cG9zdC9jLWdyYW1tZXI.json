{"title":"浅谈 C 和其他语言","date":"2019-05-01T09:20:35.000Z","thumbnail":"https://i.loli.net/2019/05/01/5cc9b356972c7.jpg","slug":"c-grammer","comments":true,"tags":["C"],"categories":["C&C++"],"updated":"2019-05-01T15:02:38.381Z","content":"<p>大体谈谈近来对C以及其他一些语言的学习心得……<br><a id=\"more\"></a></p>\n<p><br></p>\n<p><br></p>\n<p><strong>一. C++ 的学习</strong><br>    C++在两年前大一时候课程学习过，包括C++课程设计。数据结构也是基于C++来讲的，大二时候专门有一个课程是程序设计，主要就是利用C++和C#做一些小项目（比如我的第一个小项目就是基于MFC的的图形化界面的计算器）。大三时侯的算法课就是完全是使用C++做算法题，当时还有专门的实验课就是算法课包括期末上机测试。后来的课程学习了Java，到了大三的密码学课程设计写密码算法我的密码算法是使用C++和Java。在我看来C++的灵魂来自于类Class（面向对象）和从C那里继承过来的指针了，因为在我看来指针的真的是无所不为，功能可以为所欲为。<br>    这一路来一直都是在使用C++，不得不说C++在底层运用可见一斑了。然而语言只不过是最最基础的东西了，算法才是使用语言写出来的最具色彩的东西了，算法也可以说把语言展现得淋漓尽致。聪慧的思维逻辑和熟能生巧的技能无非是算法设计的支柱。<br>    然而对于上面层次的设计应用C++似乎并不能运用自如，加之Web安全的学习必要性，使我不得不对前端语言以及前端设计有一定的了解和掌握。</p>\n<p><strong>二. C 的学习</strong><br>    C语言在我看来应该算是众多语言的父辈级别的语言了，C++继承自C毋庸置疑，Java完全面向对象但是又高于此，继承了C的语言特性、C++的类的特性，但是又开辟了类的新特性。但是归根还是离不开C。近来由于需要学习了一遍C语言的大致语法特性，不得不说大哥还是大哥。至此在C++的基础上来学习了一遍C，确实是有不少感触。<br>    <strong>我认为C的灵魂所在就是指针了，真的是无所不能，可以为所欲为！</strong></p>\n<p><strong>仅以面向过程的比较C和C++的话：</strong></p>\n<ol>\n<li><strong>不同的是</strong><ul>\n<li>C没有C++具备的<font color=\"#FF7F00\"><strong>字符串类型</strong></font>，而用<code>char</code>类型的数组或者指针来当作字符串使用，但是字符串最后一个字符必须要强调一下必须是<code>&#39;\\0&#39;</code>才行（不是ASCII48的数字<code>0</code>，而是ASCII为0的<code>NUL</code>字符）；</li>\n<li><font color=\"#FF7F00\"><strong>输入输出</strong></font>方式不同； </li>\n<li><font color=\"#FF7F00\"><strong>动态内存申请和释放的函数</strong></font>不同。</li>\n<li><font color=\"#FF7F00\"><strong>头文件包含</strong></font>C++省略了<code>.h</code>，而使用小写<code>c</code>开头。如C是<code>#include &lt;math.h&gt;</code>，C++是<code>#include &lt;cmath&gt;</code></li>\n</ul>\n</li>\n<li><strong>基本相同的是：</strong>数据类、运算符、表达式顺序结构、控制结构、循环结构、数组、函数、指针、结构体、共用体、枚举类型、文件</li>\n</ol>\n<p><strong>三. Java 的学习</strong><br>    Java的初次学习是在一年前的课程上，后来设计比较少。总的来说，Java应该算是在语言里最难研究的一门语言了，多线程处理、高并发机制、JVM原理等都是其重点核心。由于它是纯面向对象的一门语言，所以会在C++的基础上多了非常多的特性，包括最基础的在类里面又直接定义一个类这种行为、属性的覆盖、方法的重载等。<br>    值得注意的是，Java并没有C++类的多重继承，即一个类继承多个类。Java的一个类只能有一个父类，所以Java提供了接口（Interface），让类去继承（extends）这个接口，解决了C++中比较复杂的继承关系，但是又开创了新的继承方式。比如使用了在接口内定义上的抽象（Abstract）方法，让继承这个接口的类非常自由地去重载这个方法。这种接口的继承方式影响深远，PHP语言继承类（extends）也是使用这种方法。<br>    还有一个更加值得一提的是锁的处理机制，当然有的需求仅用<code>Synchronized</code>是远远不够的，还需要其他一些方式。<br>    我认为学习Java不应该总是对照着C++来学习，因为他们相似甚少，而Java这种纯面向对象却更加的‘硬核’……</p>\n<p><strong>四. Python 的学习</strong><br>    由于Python这种极具吸引力的、更加“奔放”的编程语言有着自带强大吸引力的能力，我觉得每个人都应该学一学这一门语言。“人生苦短，我用python。”，两年前的课上在张老师的PPT里我第一次看到这句话，当时还以为老师在讲个程序员才能懂的冷笑话。直到现在，我也懂了这句话，原来说的是心里话！C++一段代码能处理的事而Python只需要一句话……给我最大的感受还是<code>for  in :</code>这个语法，是的这个语法太强大了（比如迭代器的使用）。<br>    先说说Python语法的free，一行里除非使用了多条语句，不然直接吊到不用是<code>;</code>这个结束符来表示一个语句的结束（人家直接不用语句结束符就能表示一个语句结束，自由到有些骄傲 ╮(╯▽╰)╭ ……）。再说说一个语句块是不会放到一对花括号<code>{}</code>里滴，因为Python是种能有多自由就有多节约的语言，人家的花括号用来表示字典，不然浪费了。所以Python的语句块是以代码缩进来标识的，这就对编程的规范性提出了非常苛刻的要求了—缩进必须相同，不然视为错误，而且还要有冒号来提醒接下来的是缩进代码块。</p>\n<ul>\n<li><code>for x in a:</code></li>\n<li><code>while 表达式:</code></li>\n<li>Python不支持<code>switch</code>而使用<code>elif</code>来选择</li>\n<li>模块和包应该要使用得很溜才行！！！</li>\n<li>……</li>\n</ul>\n<p>当然了除了C、C++、Java，比如Python、PHP、Javascript、MYSQL、HTML、CSS等单双引号都可以的啦，只不过应该注意单引号应该放在双引号里面，双引号应该放在单引号里面，且对于PHP来说，单引号里面的变量是不会被解析滴…..<br>总的来说，写脚本，数据分析等丰富的库和接口…非常多的功能真的太多了，直接用Python就好了，真的是太棒了。这是门必须要学好用好的语言，应该是必备的，更应该是标配！</p>\n<p><strong>五. PHP 的学习</strong><br>    Web安全不会PHP那应该是在扯淡了，这门服务器端的语言实在是太棒了，语法自由好用，相对C这些来说简直是神赐的礼物，”PHP是世界上最好的语言”….功能强大，但是不能不承认，漏洞最多的语言我觉得非它莫属了…..<br>    命名空间应该要重点掌握我觉得，因为在框架中频繁使用！！！</p>\n<p><strong>六. CSS、MYSQL、HTML、javascript、XML等</strong><br>    CSS、MYSQL、HTML、javascript、XML等这一套前端标配，对搞Web安全来说真的是必须要搞好的……</p>\n<p> <br><br>下面是我的关于内存管理的一些误区，我也整理了一下。<br>(1)</p>\n<blockquote>\n<ul>\n<li>数据段</li>\n<li>代码段<code>data</code>、<code>bss</code></li>\n<li>栈</li>\n<li>堆 </li>\n</ul>\n</blockquote>\n<p>(2)C语言的</p>\n<blockquote>\n<p> <code>static</code>、<code>const</code>、<code>auto</code>、<code>register</code>、<code>extern</code></p>\n</blockquote>\n<div class=\"article-img\"><p><img src=\"https://i.loli.net/2019/05/01/5cc99f35315d0.png\" alt=\"1.png\" data-zoomable><br><img src=\"https://i.loli.net/2019/05/01/5cc99f353afbb.png\" alt=\"2.png\" data-zoomable><br><img src=\"https://i.loli.net/2019/05/01/5cc99f3a23b64.png\" alt=\"3.png\" data-zoomable><br><img src=\"https://i.loli.net/2019/05/01/5cc99f3a2aca3.png\" alt=\"4.png\" data-zoomable></p></div>\n","next":{"title":"XXE-XML","slug":"xxe-xml-dtd"},"link":"https://Directoree.github.io/post/c-grammer/","copyright":{"author":"Directoree","link":"<a href=\"https://Directoree.github.io/post/c-grammer/\" title=\"浅谈 C 和其他语言\">https://Directoree.github.io/post/c-grammer/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}